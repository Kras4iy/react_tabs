{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","className","map","tab","id","href","onClick","title","find","content","App","useState","selectedTab","setSelectedTabs","ReactDOM","render","document","getElementById"],"mappings":"sKAQaA,EAAwB,SAACC,GAAW,IAAD,EACtCC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAE7B,OACE,gCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWE,EAAIC,KAAOL,EAClB,YACA,GAHN,SAME,mBACEM,KAAI,WAAMF,EAAIC,IACdE,QAAS,WACHH,EAAIC,KAAOL,GACbC,EAAcG,IAJpB,SAQGA,EAAII,SAVFJ,EAAIC,WAiBjB,qBAAKH,UAAU,QAAQ,UAAQ,cAA/B,mBACGH,EAAKU,MAAK,SAAAL,GAAG,OAAIA,EAAIC,KAAOL,YAD/B,aACG,EAA4CU,cC/BxCX,EAAe,CAC1B,CAAEM,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAAuCC,mBAASb,EAAK,IAArD,mBAAOc,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKZ,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGW,EAAYL,SAGf,cAAC,EAAD,CACET,KAAMA,EACNC,cAAea,EAAYR,GAC3BJ,cAAea,QCvBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1bf984be.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: CallableFunction\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const { tabs, selectedTabId, onTabSelected } = props;\n\n  return (\n    <div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={tab.id === selectedTabId\n                ? 'is-active'\n                : ''}\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => {\n                  if (tab.id !== selectedTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs : Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTabs] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTabs}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}